-- MySQL Script generated by MySQL Workbench
-- Tue 07 May 2019 05:10:27 PM CDT
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering
-- Hand-converted to PSQL by suhail

 --SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema lineage
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema lineage
-- -----------------------------------------------------
CREATE SCHEMA lineage AUTHORIZATION lineage;

-- -----------------------------------------------------
-- Table lineage.experiment
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS lineage.experiment (
  id uuid NOT NULL,
  create_time VARCHAR(45) NOT NULL,
  start_time TIMESTAMP NOT NULL,
  parameters JSON NULL,
  commit_hash VARCHAR(2000) NULL,
  PRIMARY KEY (id));


-- -----------------------------------------------------
-- Table lineage.workflow
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS lineage.workflow (
  id uuid NOT NULL,
  directory_path VARCHAR(45) NOT NULL,
  PRIMARY KEY (id));


-- -----------------------------------------------------
-- Table lineage.artifact
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS lineage.artifact (
  id uuid NOT NULL,
  filename VARCHAR(100) NOT NULL,
  path VARCHAR(200) NULL,
  workflow_id uuid NOT NULL,
  PRIMARY KEY (id),
  CONSTRAINT fk_artifact_workflow
    FOREIGN KEY (workflow_id)
    REFERENCES lineage.workflow (id)
    ON DELETE CASCADE
    ON UPDATE CASCADE);

-- -----------------------------------------------------
-- Table lineage.artifact_column
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS lineage.artifact_column (
  id uuid NOT NULL,
  column_name VARCHAR(45) NOT NULL,
  column_type VARCHAR(45) NULL,
  sketch_signature VARCHAR(45) NULL,
  artifact_id uuid NOT NULL,
  sketch_time INT NULL,
  PRIMARY KEY (id),
  CONSTRAINT fk_artifact_column_artifact1
    FOREIGN KEY (artifact_id)
    REFERENCES lineage.artifact (id)
    ON DELETE CASCADE
    ON UPDATE CASCADE);


-- -----------------------------------------------------
-- Table lineage.ground_truth_edge
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS lineage.ground_truth_edge (
  id uuid NOT NULL,
  artifact_1 uuid NULL,
  artifact_2 uuid NULL,
  workflow_id uuid NOT NULL,
  PRIMARY KEY (id),
  CONSTRAINT fk_ground_truth_edge_artifact1
    FOREIGN KEY (artifact_1)
    REFERENCES lineage.artifact (id)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT fk_ground_truth_edge_artifact2
    FOREIGN KEY (artifact_1)
    REFERENCES lineage.artifact (id)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT fk_ground_truth_edge_workflow
    FOREIGN KEY (workflow_id)
    REFERENCES lineage.workflow (id)
    ON DELETE CASCADE
    ON UPDATE CASCADE);


-- -----------------------------------------------------
-- Table lineage.cluster
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS lineage.cluster (
  id uuid NOT NULL,
  artifact_id uuid NOT NULL,
  type VARCHAR(45) NULL,
  experiment_id uuid NOT NULL,
  PRIMARY KEY (id),
  CONSTRAINT fk_cluster_artifact
    FOREIGN KEY (artifact_id)
    REFERENCES lineage.artifact (id)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT fk_cluster_experiment
    FOREIGN KEY (experiment_id)
    REFERENCES lineage.experiment (id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table lineage.relationship_edge
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS lineage.relationship_edge (
  id uuid NOT NULL,
  artifact_1 uuid NOT NULL,
  artifact_2 uuid NOT NULL,
  distance_type VARCHAR(45) NULL,
  distance_value FLOAT NULL,
  experiment_id uuid NOT NULL,
  PRIMARY KEY (id),
  CONSTRAINT fk_experiment
    FOREIGN KEY (experiment_id)
    REFERENCES lineage.experiment (id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_relationship_edge_artifact1
    FOREIGN KEY (artifact_1)
    REFERENCES lineage.artifact (id)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT fk_relationship_edge_artifact2
    FOREIGN KEY (artifact_2)
    REFERENCES lineage.artifact (id)
    ON DELETE CASCADE
    ON UPDATE CASCADE);

-- -----------------------------------------------------
-- Table lineage.time_log
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS lineage.time_log (
  task_name VARCHAR(45) NULL,
  time_taken INT NULL,
  experiment_id uuid NULL,
  CONSTRAINT fk_TimeLog_Experiment1
    FOREIGN KEY (experiment_id)
    REFERENCES lineage.experiment (id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);
